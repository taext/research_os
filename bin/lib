#!/home/dd/anaconda3/bin/python
# lib - LibGen - search and parse gen.lib.rus.ec - v0.7 (November 28th 2017)
# What's New: fix size unit bug

import sys, requests, re, lg_stepper

def search_libgen(args, count=1):
    
    # NB: CHECKS FOR OVERRIDDING INTEGER VALUE count
    # IN SEARCH TERMS (aggresively, any integer)

    m = re.search('[\s\'](\d{1,2})[\s\']', args)
    if m:
    
        count = int(m.group(1))
        args = args[:-(len(m.group(1))+2)]


    args2 = args.replace(" ","+")
    url = 'http://gen.lib.rus.ec/search.php?req=grey+hat&lg_topic=libgen&open=0&view=simple&res=25&phrase=0&column=def'
    url2 = url.replace('grey+hat',args2)

    initial_count = count
    result = []
    again = True

    while count > 0:
        
        r = requests.get(url2)
        content = r.text
        titles = re.findall('title.*?id=\d+\>(.*?)\<', content)
        
        titles2 = []
        for item in titles:
            item2 = item.replace("&amp;","&")
            item3 = item2.replace("&quot;",'"')
            titles2.append(item3)
        
        links = re.findall('href=\'(book.index.*?)\'', content)
        links2 = []
        [links2.append('http://gen.lib.rus.ec/' + item) for item in links]
        filetype = re.findall('nowrap>(pdf|epub|mobi|chm)', content)
        size = re.findall('nowrap>(\d{1,3}\s[M|k]b)', content)
        result += list(zip(titles2, filetype, size, links2))

        count = count - len(titles)
        url2 = lg_stepper.next_page(url2)
        if len(links2) < 23 and count > len(links2):
            return(result[:initial_count])

    return(result[:initial_count])

if __name__ == '__main__':

    arg_string = ""
    
    for item in sys.argv[1:]:
        arg_string += item + " "

    result = (search_libgen(arg_string))
    #print("\n" + "\t\tLibGen results: " + arg_string, "\n")
    print("\n")
    for name, ftype, size, url in result:
        print("  ", name, "(" + ftype, size +")", "\n", "\t\t", url, "\n")
    
    #print("\n")